{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Desktop/web-repo/web-production/react/react-maket/src/components/EventCard/EventCard.jsx\";\n//Component EventCard\nimport PropType from 'prop-types';\nimport { IconName } from \"react-icons/fa\";\nimport css from './EventCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventCard = _ref => {\n  let {\n    name,\n    location,\n    type,\n    speaker,\n    start,\n    end\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.event,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: css.chip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: css.chip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), speaker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: css.chip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), start]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: css.chip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), \"Duration\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = EventCard;\nEventCard.propTypes = {\n  name: PropType.string.isRequired,\n  location: PropType.string.isRequired,\n  type: PropType.string.isRequired,\n  speaker: PropType.string.isRequired,\n  start: PropType.string.isRequired,\n  end: PropType.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["PropType","IconName","css","EventCard","name","location","type","speaker","start","end","event","title","info","chip","propTypes","string","isRequired"],"sources":["/Users/roma/Desktop/web-repo/web-production/react/react-maket/src/components/EventCard/EventCard.jsx"],"sourcesContent":["//Component EventCard\nimport PropType from 'prop-types';\nimport { IconName } from \"react-icons/fa\";\nimport css from './EventCard.module.css';\nexport const EventCard = ({name, location, type, speaker, start, end}) => {\n\treturn (\n\t\t<div className={css.event}>\n\t\t\t<h2 className={css.title}>{name}</h2>\n\t\t\t<p className={css.info}>\n\t\t\t\t<i className={css.chip}></i>\n\t\t\t\t{location}\n\t\t\t</p>\n\t\t\t<p className={css.info}>\n\t\t\t\t<i className={css.chip}></i>\n\t\t\t\t{speaker}\n\t\t\t</p>\n\t\t\t<p className={css.info}>\n\t\t\t\t<i className={css.chip}></i>\n\t\t\t\t{start}\n\t\t\t</p>\n\t\t\t<p className={css.info}>\n\t\t\t\t<i className={css.chip}></i>\n\t\t\t\tDuration\n\t\t\t</p>\n\t\t\t{/* <span className=\"chip free|paid|vip\">Event type</span> */}\n\t\t</div>\n\t);\n};\n\nEventCard.propTypes = {\n\tname: PropType.string.isRequired,\n\tlocation: PropType.string.isRequired,\n\ttype: PropType.string.isRequired,\n\tspeaker: PropType.string.isRequired,\n\tstart: PropType.string.isRequired,\n\tend: PropType.string.isRequired\n};\n\n"],"mappings":";AAAA;AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,GAAG,MAAM,wBAAwB;AAAC;AACzC,OAAO,MAAMC,SAAS,GAAG,QAAiD;EAAA,IAAhD;IAACC,IAAI;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAG,CAAC;EACpE,oBACC;IAAK,SAAS,EAAEP,GAAG,CAACQ,KAAM;IAAA,wBACzB;MAAI,SAAS,EAAER,GAAG,CAACS,KAAM;MAAA,UAAEP;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACrC;MAAG,SAAS,EAAEF,GAAG,CAACU,IAAK;MAAA,wBACtB;QAAG,SAAS,EAAEV,GAAG,CAACW;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,EAC3BR,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACN,eACJ;MAAG,SAAS,EAAEH,GAAG,CAACU,IAAK;MAAA,wBACtB;QAAG,SAAS,EAAEV,GAAG,CAACW;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,EAC3BN,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACJ;MAAG,SAAS,EAAEL,GAAG,CAACU,IAAK;MAAA,wBACtB;QAAG,SAAS,EAAEV,GAAG,CAACW;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,EAC3BL,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eACJ;MAAG,SAAS,EAAEN,GAAG,CAACU,IAAK;MAAA,wBACtB;QAAG,SAAS,EAAEV,GAAG,CAACW;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAEzB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAER,CAAC;AAAC,KAvBWV,SAAS;AAyBtBA,SAAS,CAACW,SAAS,GAAG;EACrBV,IAAI,EAAEJ,QAAQ,CAACe,MAAM,CAACC,UAAU;EAChCX,QAAQ,EAAEL,QAAQ,CAACe,MAAM,CAACC,UAAU;EACpCV,IAAI,EAAEN,QAAQ,CAACe,MAAM,CAACC,UAAU;EAChCT,OAAO,EAAEP,QAAQ,CAACe,MAAM,CAACC,UAAU;EACnCR,KAAK,EAAER,QAAQ,CAACe,MAAM,CAACC,UAAU;EACjCP,GAAG,EAAET,QAAQ,CAACe,MAAM,CAACC;AACtB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}